{"version":3,"sources":["webpack:///./src/components/Footer.js","webpack:///./src/templates/blog-index.js"],"names":["Footer","render","react_default","a","createElement","style","marginTop","rhythm","paddingTop","float","href","target","rel","React","Component","BlogIndexTemplate","siteTitle","get","this","langKey","props","pageContext","posts","Layout","location","title","SEO","Bio","Panel","map","_ref","node","fields","slug","key","fontFamily","fontSize","marginBottom","gatsby_browser_entry","boxShadow","to","formatPostDate","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","components_Footer","pageQuery"],"mappings":"yKA8CeA,4FAzCbC,OAAA,WACE,OACEC,EAAAC,EAAAC,cAAA,UACEC,MAAO,CACLC,UAAWC,YAAO,KAClBC,WAAYD,YAAO,KAGrBL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEI,MAAO,UACnBP,EAAAC,EAAAC,cAAA,KAAGM,KAAK,WAAWC,OAAO,SAASC,IAAI,uBAAvC,QAIFV,EAAAC,EAAAC,cAAA,KACEM,KAAK,gCACLC,OAAO,SACPC,IAAI,uBAHN,WAMK,IAjBP,IAkBS,IACPV,EAAAC,EAAAC,cAAA,KACEM,KAAK,+BACLC,OAAO,SACPC,IAAI,uBAHN,UAMK,IAzBP,IA0BS,IACPV,EAAAC,EAAAC,cAAA,KACEM,KAAK,mDACLC,OAAO,SACPC,IAAI,uBAHN,iBA9BaC,IAAMC,oGCQrBC,4FACJd,OAAA,WACE,IAAMe,EAAYC,IAAIC,KAAM,sCACtBC,EAAUD,KAAKE,MAAMC,YAAYF,QAEjCG,EAAQL,IAAIC,KAAM,sCAExB,OACEhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQC,SAAUN,KAAKE,MAAMI,SAAUC,MAAOT,GAC5Cd,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACAxB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,OAEFzB,EAAAC,EAAAC,cAAA,YACe,OAAZe,GAAgC,OAAZA,GACnBjB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,gCAC2B,IACzB1B,EAAAC,EAAAC,cAAA,KACEM,KAAK,sEACLC,OAAO,SACPC,IAAI,uBAHN,+BAFF,KAaDU,GAASA,EAAMO,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACfN,EAAQR,IAAIc,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACE/B,EAAAC,EAAAC,cAAA,WAAS8B,IAAKH,EAAKC,OAAOC,MACxB/B,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACL8B,WAAY,yBACZC,SAAU7B,YAAO,GACjB8B,aAAc9B,YAAO,OAGvBL,EAAAC,EAAAC,cAACkC,EAAA,KAAD,CACEjC,MAAO,CAAEkC,UAAW,QACpBC,GAAIT,EAAKC,OAAOC,KAChBrB,IAAI,YAEHa,IAGLvB,EAAAC,EAAAC,cAAA,aACGqC,YAAeV,EAAKW,YAAYC,KAAMxB,GADzC,MAESyB,YAAkBb,EAAKc,cAGlC3C,EAAAC,EAAAC,cAAA,KACE0C,wBAAyB,CAAEC,OAAQhB,EAAKW,YAAYM,eAM9D9C,EAAAC,EAAAC,cAAC6C,EAAD,WA5DwBpC,IAAMC,WAoEzBoC,GAFEnC,YAEO","file":"component---src-templates-blog-index-js-e695f4291be285845b86.js","sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://twitter.com/yufusunlu\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/yusufunlu\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://www.linkedin.com/in/yusuf-unlu-76631139/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          linkedin\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {langKey !== 'en' && langKey !== 'ru' && (\n            <Panel>\n              These articles have been{' '}\n              <a\n                href=\"https://github.com/gaearon/overreacted.io#contributing-translations\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                translated by the community\n              </a>\n              .\n            </Panel>\n          )}\n\n          {posts && posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      fontFamily: 'Montserrat, sans-serif',\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{ boxShadow: 'none' }}\n                      to={node.fields.slug}\n                      rel=\"bookmark\"\n                    >\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n                />\n              </article>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
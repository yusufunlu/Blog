{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/components/Panel.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/Bio.js","webpack:///./src/components/Footer.js","webpack:///./src/templates/blog-index.js","webpack:///./src/assets/profile-pic.png"],"names":["SEO","meta","image","title","description","slug","lang","query","render","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","Panel","children","style","fontSize","border","borderRadius","padding","background","wordBreak","formatReadingTime","minutes","cups","Math","round","Array","E","fill","join","formatPostDate","date","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean","Bio","display","marginBottom","rhythm","src","profilePic","alt","marginRight","width","height","maxWidth","href","React","Component","Footer","marginTop","paddingTop","float","target","rel","BlogIndexTemplate","siteTitle","get","this","langKey","props","pageContext","posts","Layout","location","map","node","fields","key","fontFamily","boxShadow","to","frontmatter","timeToRead","dangerouslySetInnerHTML","__html","spoiler","module","exports"],"mappings":"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","file":"component---src-templates-blog-index-js-5956893065253766e4e9.js","sourcesContent":["import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\nconst query = graphql`\r\n  query GetSiteMetadata {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        description\r\n        siteUrl\r\n        social {\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\r\n  return (\r\n    <StaticQuery\r\n      query={query}\r\n      render={data => {\r\n        const { siteMetadata } = data.site;\r\n        const metaDescription = description || siteMetadata.description;\r\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\r\n        const url = `${siteMetadata.siteUrl}${slug}`;\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{ lang }}\r\n            {...(title\r\n              ? {\r\n                  titleTemplate: `%s ‚Äî ${siteMetadata.title}`,\r\n                  title,\r\n                }\r\n              : {\r\n                  title: `${siteMetadata.title} ‚Äî Yusuf Unlu Sw Blog`,\r\n                })}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: 'og:url',\r\n                content: url,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title || siteMetadata.title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: siteMetadata.social.twitter,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: title || siteMetadata.title,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                metaImage\r\n                  ? [\r\n                      {\r\n                        property: 'og:image',\r\n                        content: metaImage,\r\n                      },\r\n                      {\r\n                        name: 'twitter:image',\r\n                        content: metaImage,\r\n                      },\r\n                    ]\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  meta: [],\r\n  title: '',\r\n  slug: '',\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  slug: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('üç±')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('‚òïÔ∏è').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","import React from 'react';\r\nimport profilePic from '../assets/profile-pic.png';\r\nimport { rhythm } from '../utils/typography';\r\n\r\nclass Bio extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          marginBottom: rhythm(2),\r\n        }}\r\n      >\r\n        <img\r\n          src={profilePic}\r\n          alt={`Yusuf Unlu`}\r\n          style={{\r\n            marginRight: rhythm(1 / 2),\r\n            marginBottom: 0,\r\n            width: rhythm(2),\r\n            height: rhythm(2),\r\n            borderRadius: '50%',\r\n          }}\r\n        />\r\n        <p style={{ maxWidth: 310 }}>\r\n          Personal blog by{' '}\r\n          <a href=\"https://mobile.twitter.com/yufusunlu\">Yusuf Unlu</a>.{' '}\r\n          What I learnt about code and history mostly\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bio;","import React from 'react';\r\n\r\nimport { rhythm } from '../utils/typography';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer\r\n        style={{\r\n          marginTop: rhythm(2.5),\r\n          paddingTop: rhythm(1),\r\n        }}\r\n      >\r\n        <div style={{ float: 'right' }}>\r\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            rss\r\n          </a>\r\n        </div>\r\n        <a\r\n          href=\"https://twitter.com/yufusunlu\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          twitter\r\n        </a>{' '}\r\n        &bull;{' '}\r\n        <a\r\n          href=\"https://github.com/yusufunlu\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          github\r\n        </a>{' '}\r\n        &bull;{' '}\r\n        <a\r\n          href=\"https://www.linkedin.com/in/yusuf-unlu-76631139/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          linkedin\r\n        </a>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {langKey !== 'en' && langKey !== 'ru' && (\n            <Panel>\n              These articles have been{' '}\n              <a\n                href=\"https://github.com/gaearon/overreacted.io#contributing-translations\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                translated by the community\n              </a>\n              .\n            </Panel>\n          )}\n\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      fontFamily: 'Montserrat, sans-serif',\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{ boxShadow: 'none' }}\n                      to={node.fields.slug}\n                      rel=\"bookmark\"\n                    >\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` ‚Ä¢ ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n                />\n              </article>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/profile-pic-69c77131fd248a7aaaf26fab021f469f.png\";"],"sourceRoot":""}